package ExamplesToReinforce.Examples_17;
/*
Сколько объектов будут пригодны для удаления их СборщикомМусора (garbage collection)
на строке с комментариями?
*/
public class InterestingExamples_17_2 {
    public static void main(String[] args) {
        /* Создается массив который способен хранить в себе объекты класса GameOver,
        но на данном этапе все его ячейки заполнены null и у нас есть первый объект '+1' */
        GameOver[] game_array_2 = new GameOver[5];
        /* И вот мы заполняем нулевую ячейку объектом GameOver,
        в котором есть массив из трех элементов int. Т.е. у нас 2-а объекта '+2' */
        game_array_2[0] = new GameOver();
        /* Создаем переменную, которая ссылается на объект класса GameOver, т.е. мы
        получили еще два объекта и снова '+2' */
        GameOver just_an_object = new GameOver();
        /* Помещаем ссылку на объект в ячейку с индексом 1 нашего массива, что создали
        в начале приложения */
        game_array_2[1] = just_an_object;
        /* Рвем связь переменной и объекта, но из массива еще есть ссылка на тот же объект */
        just_an_object = null;
        /* И вот тут мы рвем и ее, т.е. на объект созданный в строке
        GameOver just_an_object = new GameOver(); больше нет ссылок, а значит его можно в топку... */
        game_array_2[1] = null;

        /* Создано 5-ть объектов на 2-а потеряны ссылки, значит 2-а объекта подберет сборщик мусора */
        /** Комментарии...кто доживет до конца? **/
    }
}

class GameOver{
    // При создании объекта GameOver будет создаваться массив (при каждом создании)
    int[] game_array = {-3, 0, 3};
}